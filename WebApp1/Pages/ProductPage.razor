@page "/product"
@using Blazored.LocalStorage.StorageOptions
@using WebApp1.Model
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
    <h1 class="mb-3 mt-3">Add Product</h1>

    <EditForm Model="@aProduct" OnSubmit="@HandleSubmit" class="row p-3">
    <DataAnnotationsValidator />
    <ValidationSummary />
    
    <div class="col-md-12 mb-3">
    <label for="Name">Name</label>
    <InputText id="Name" @bind-Value="aProduct.Name" class="form-control" />
    </div>
    
    <div class="col-md-6 mb-3">
    <label for="Price">Price</label>
    <InputNumber id="Price" @bind-Value="aProduct.Price" class="form-control" />
    </div>
    
    <div class="col-md-6 mb-3">
        <label for="PublishedDate">Published Date</label>
        <InputDate id="PublishedDate" @bind-Value="aProduct.PublishedDate" class="form-control" />
    </div>
    
    <div class="col-md-6 mb-3">
        <label for="Description">Description</label>
        <InputTextArea id="Description" @bind-Value="aProduct.Description" class="form-control" />
    </div>
    
  
    
    <div class="col-md-6 mb-3">
        <label for="Category">Category</label>
        <InputSelect id="Category" @bind-Value="aProduct.Category" class="form-control">
            @foreach (var category in categories)
            {
                <option value ="@category">@category</option>
            }
        </InputSelect>
    </div>
    
        
    
    <div class="col-12 mb-3">
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
    </EditForm>
<DicePage></DicePage>
    @code {

private Product aProduct = new Product();

private List<string> categories = new List<string>
{
    "Computer",
    "Audio",
    "Video",
    "Memory",
    "Other"
};

private List<Product> Products = new();

private async Task HandleSubmit()
{
    Products.Add(aProduct);
    aProduct = new();
    
    await LocalStorage.SetItemAsync("product", Products);
    
}
protected override async Task OnInitializedAsync()
{
    // Retrieve the product list from local storage
    Products = await LocalStorage.GetItemAsync<List<Product>>("product") ?? new List<Product>();
}
    
    
    
    
    
    

}